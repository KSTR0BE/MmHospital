<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="appointMent">

<!-- 
	이 영역에 SQL문에 맞는 태그를 사용하여 작성하면 된다.
	
	기본적인 태그들...
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	
	위 태그들에서 사용되는 주요 속성들
	
	1) id : 해당 SQL문을 호출할 때 namespace명과 연결하여 사용하는 쿼리ID값
	
	2) parameterType : SQL문을 실행할 때 사용될 데이터를 담은 파라미터 객체 타입을 지정한다.
					(보통 VO클래스, 자바의 기본 자료형 등이 사용된다.)
					(typeAlias로 지정한 alias명으로 지정할 수 있다.)
		
	3) resultType : select문을 실행한 결과값을 담을 객체 타입을 지정한다.
					(보통 VO클래스, 자바의 기본 자료형 등이 사용된다.)
					(typeAlias로 지정한 alias명으로 지정할 수 있다.)
					
	4) resultMap : 결과 레코드 컬럼명과 VO객체의 속성명이 다를 경우에 적절한 매핑정보를
				제공하기 위해 사용된다.
				
 -->
 
<!--  	공지사항 Map -->

	<resultMap type="kr.or.ddit.appointMent.vo.AppointMentVO" id="amMap">
	
		<id column="AP_NO" property="apNo"/>
		<result column="AP_DT" property="apDt"/>
		<result column="AP_YN" property="apYn"/>
		<result column="MEM_NO" property="memNo"/>
		<result column="MEM_NM" property="memNm"/>
		<result column="DT_NO" property="dtNo"/>
		<result column="AP_TM" property="apTm"/>
		<result column="DT_NM" property="dtNm"/>
		<result column="CL_NM" property="clNm"/>
	
	</resultMap>
	
	<resultMap type="kr.or.ddit.appointMent.vo.DiagnosisVO" id="dgMap">
	
		<id column="AP_NO" property="apNo"/>
		<result column="AP_DT" property="apDt"/>
		<result column="AP_YN" property="apYn"/>
		<result column="MEM_NO" property="memNo"/>
		<result column="MEM_NM" property="memNm"/>
		<result column="DT_NO" property="dtNo"/>
		<result column="AP_TM" property="apTm"/>
	
	</resultMap>
	
	<insert id="amInsert" parameterType="kr.or.ddit.appointMent.vo.AppointMentVO">
		
		INSERT INTO appointment(AP_NO, AP_DT,MEM_NO ,DT_NO ,AP_TM)
		VALUES
		(SEQ_AP.NEXTVAL, #{apDt}, #{memNo}, #{dtNo}, #{apTm})
		
	</insert>
	
	
	
	<select id ="amRecord" parameterType="int" resultMap="amMap">
	
		select A.AP_NO, A.AP_DT, A.AP_TM, D.DT_NM, C.CL_NM
		from APPOINTMENT A, DOCTOR D, CLASS C
		where A.DT_NO = D.DT_NO AND
          D.CL_NO = C.CL_NO AND
          A.AP_YN = 'Y' AND
          A.MEM_NO =#{memNo} 
	
	</select>
	
	<select id="calAppoint" resultMap="amMap">
		SELECT A.AP_DT, A.MEM_NO, 
		    	(SELECT MEM_NM FROM MEMBER M WHERE A.MEM_NO = M.MEM_NO) AS "MEM_NM",
		   		A.AP_TM
					FROM APPOINTMENT A
					WHERE A.AP_YN = 'Y'
                    OR A.AP_YN = 'y'
                    ORDER BY AP_TM
	</select>
	
	<select id ="amData" parameterType="int" resultMap="dgMap">

	select DIAGNOSIS.DG_TIT, DIAGNOSIS.DG_CON, DIAGNOSIS.DG_DT,
	MEDICIEN.MD_NM, DISEASE.DS_MIN, CLASS.CL_NM, DOCTOR.DT_NM
	from DIAGNOSIS, MEDICIEN, DISEASE, CLASS, DOCTOR
	where DIAGNOSIS.MD_NO = MEDICIEN.MD_NO AND
	DIAGNOSIS.DS_CO = DISEASE.DS_CO AND
	DIAGNOSIS.CL_NO = CLASS.CL_NO AND
	DIAGNOSIS.DT_NO = DOCTOR.DT_NO AND
	DIAGNOSIS.MEM_NO = #{no}
	
	
	</select>
	
	<select id="dgSearch" parameterType="map" resultMap="dgMap">
    SELECT DIAGNOSIS.DG_TIT, DIAGNOSIS.DG_CON, DIAGNOSIS.DG_DT, 
           MEDICIEN.MD_NM, DISEASE.DS_MIN, CLASS.CL_NM, DOCTOR.DT_NM  
    FROM DIAGNOSIS, MEDICIEN, DISEASE, CLASS, DOCTOR  
    WHERE DIAGNOSIS.MD_NO = MEDICIEN.MD_NO 
      AND DIAGNOSIS.DS_CO = DISEASE.DS_CO 
      AND DIAGNOSIS.CL_NO = CLASS.CL_NO 
      AND DIAGNOSIS.DT_NO = DOCTOR.DT_NO 
      AND DIAGNOSIS.MEM_NO = #{memNo}
      AND DIAGNOSIS.DG_DT LIKE '%${month}%' 
</select>
	
	<delete id="amDelete" parameterType="int" >
	delete from APPOINTMENT
	where AP_NO = #{apNo}
	</delete>
	
<!-- 	중복 확인 -->
	<select id="amChk" resultMap="amMap">
		
		SELECT *
		FROM APPOINTMENT
		WHERE AP_DT = #{apDt} AND AP_TM = #{apTm} AND DT_NO = #{dtNo}
		
	</select>
	
	<select id="amChk1" resultMap="amMap">
		
		SELECT *
		FROM APPOINTMENT
		WHERE MEM_NO = #{memNo}
		AND AP_YN = 'Y'
		
	</select>
	
	<select id="DoctorApList" resultMap="amMap" >
	
	SELECT A.AP_NO, TO_CHAR(A.AP_DT, 'YYYY-MM-DD') AP_DT , A.AP_TM,
        	(SELECT M.MEM_NM FROM MEMBER M WHERE M.MEM_NO = A.MEM_NO) AS MEM_NM,
        	A.AP_YN,
        	A.MEM_NO
        	FROM APPOINTMENT A
        	WHERE A.AP_YN = 'Y'
        	AND A.DT_NO = #{dtNo}
        	ORDER BY A.AP_DT
	</select>
	
<!-- 의사 환자 예약현황 상세정보 -->
	<select id="DoctorApDetail" resultMap="amMap">
		SELECT TO_CHAR(A.AP_DT, 'YYYY-MM-DD') AP_DT, A.AP_TM, A.AP_YN, A.AP_NO,
		(SELECT M.MEM_NM FROM MEMBER M WHERE M.MEM_NO = A.MEM_NO) AS MEM_NM
    	FROM APPOINTMENT A
		WHERE A.AP_NO = #{apNo}
	</select>
	
	<update id="DoctorApUpdate" parameterType="appointMentVO">
		update APPOINTMENT
		SET
			ap_yn = 'N'
		WHERE ap_no = #{apMo}
	</update>
	
	
</mapper>